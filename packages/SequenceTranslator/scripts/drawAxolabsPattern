#name: drawAxolabsPattern
#language: python
#input: dataframe ss_df
#input: dataframe as_df
#input: string patternName
#output: graphics pattern

basis_color_dict = {
    "RNA": 'k',  # black
    "DNA": 'm',  # magenta
    "2'-Fluoro": 'b',  # blue
    "2'-O-Methyl": 'r',  # red
    "2'-O-MOE": 'c',  # cyan
    "Glycol nucleic acid": 'y',  # yellow
    "LNA": 'aquamarine',
    "Unlocked (UNA)": 'g'  # green
}

pattern = plt.figure()

max_length = 2 * max(len(ss_df), len(as_df)) + 2.5

for i in range(len(ss_df) - 1, -1, -1):
    plt.gca().add_patch(plt.Circle(xy=(-2 * i, 3), radius=1, fc=basis_color_dict[ss_df['basis'][i]]))
    if ss_df['pto'][i]:
        plt.gca()._add_text(plt.Text(x=-2 * i - 1.25, y=3.25, text="*", color='r', fontsize=20))
plt.gca()._add_text(plt.Text(x=-2 * len(ss_df) - 0.25, y=2.5, text="5'", fontsize=30))
plt.gca()._add_text(plt.Text(x=-max_length, y=2.5, text='SS:', fontsize=30))
plt.gca()._add_text(plt.Text(x=1, y=2.5, text="3'", fontsize=30))

for i in range(len(as_df) - 1, -1, -1):
    plt.gca().add_patch(plt.Circle(xy=(-2 * i, 0), radius=1, fc=basis_color_dict[as_df['basis'][i]]))
    if as_df['pto'][i]:
        plt.gca()._add_text(plt.Text(x=-2 * i - 1.25, y=-1.25, text="*", color='r', fontsize=20))
plt.gca()._add_text(plt.Text(x=-2 * len(as_df) - 0.25, y=-0.5, text="3'", fontsize=30))
plt.gca()._add_text(plt.Text(x=-max_length, y=-0.5, text='AS:', fontsize=30))
plt.gca()._add_text(plt.Text(x=1, y=-0.5, text="5'", fontsize=30))

scaler = -1
for index, key in enumerate(basis_color_dict):
    if key in as_df['basis'].unique() or key in ss_df['basis'].unique():
        scaler += 1
        plt.gca().add_patch(plt.Circle(xy=(-3 * scaler, -2), radius=0.5, fc=basis_color_dict[key]))
        plt.gca()._add_text(plt.Text(x=-3 * scaler - 1, y=-4, text=key, fontsize=10))

plt.axis('scaled')
plt.axis('off')
plt.title(patternName + ' for ' + str(len(ss_df)) + '/' + str(len(as_df)) + 'mer')