name: Grok Connect
on:
  workflow_dispatch: {}
  push:
    paths:
      - 'connectors/grok_connect/**'
jobs:
  check_jar:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven
        working-directory: ./connectors
        run: mvn -Dmaven.test.skip=true package
      - name: Get version
        id: get_version
        working-directory: ./connectors
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "::set-output name=version::$VERSION"
      - name: Scan Grok Connect JAR
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "connectors/grok_connect/target/grok_connect-${{ steps.get_version.outputs.version }}.jar"
          fail-build: false
          severity-cutoff: critical
          acs-report-enable: true
      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  check_libraries:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Scan Grok Connect Libraries
        uses: anchore/scan-action@v3
        id: scan
        with:
          path: "connectors/grok_connect/lib"
          fail-build: false
          severity-cutoff: critical
          acs-report-enable: true
      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
