name: Tools Package
on:
  workflow_dispatch: { }
  push:
    branches:
      - 'master'
    paths:
      - 'tools/package.json'
jobs:
jobs:
  check:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check version was changed
        run: |
          name=$(jq .name package.json | sed 's/"//g')
          latest_version="$(curl https://registry.npmjs.org/${name}/latest | jq .version)"
          current_version=$(jq .version package.json | sed 's/"//g')
          if [[ $latest_version == $current_version ]]; then
            changed_version=false
          else
            changed_version=true
          fi
          echo "::set-output name=changed_version::${changed_version}"

  build:
    runs-on: ubuntu-20.04
    if: needs.metadata.outputs.changed_version == 'true'
    environment: Prod
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Upgrade npm
        run: npm install -g npm@latest
      - name: npm version
        run: npm version
      - run: npm install
        working-directory: ./tools
      #      - run: npm publish
      #        working-directory: ./tools
      #        env:
      #          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Commit package-lock.json
        run: |
          if [ ! -z "$(git status -s tools/package-lock.json)" ]; then
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'githubactions@datagrok.ai'
            git pull
            git add tools/package-lock.json
            git commit -m "GitHub Actions: Update tools/package-lock.json"
            count=0
            until git push; do
              exit=$?
              wait=$((2 ** count))
              count=$((count + 1))
              if [ $count -lt "10" ]; then
                echo "Retry $count/$retries exited $exit, retrying 'git push' in $wait seconds..."
                sleep $wait
                git pull --rebase
              else
                echo "Retry $count/$retries exited $exit, no more retries left for 'git push'."
                exit $exit
              fi
            done
          fi
